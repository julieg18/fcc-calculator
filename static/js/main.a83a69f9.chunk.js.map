{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["math","require","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","dataValue","target","getAttribute","setState","operations","zeroStatus","symbolStatus","decimalStatus","calculateAnswer","state","getNewOperations","replaceLastOperation","symbol","array","pop","push","result","join","eval","format","precision","String","value","newOperations","update","$push","bind","assertThisInitialized","react_default","a","createElement","id","App_Display","info","App_Buttons","onClick","Component","Display","screenDisplay","props","React","Buttons","className","data-value","data-label","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a83a69f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport update from 'immutability-helper';\n\nconst math = require('mathjs');\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      operations: [0],\n      zeroStatus: \"zero\",\n      symbolStatus: \"none\",\n      decimalStatus: \"none\",\n    };\n    \n    this.handleClick = this.handleClick.bind(this);\n  };\n  \n  handleClick = e => {\n    const dataValue = e.target.getAttribute('data-value');\n    switch (dataValue) {\n      case 'clear':\n        this.setState({\n          operations: [0],\n          zeroStatus: \"zero\",\n          symbolStatus: \"none\",\n          decimalStatus: \"none\",\n        });\n        break;\n      case 'equal':\n        this.calculateAnswer();\n        break;\n      case '+':\n        this.setState({\n          decimalStatus: 'none',\n        });\n        if (this.state.symbolStatus === \"none\") {\n          this.getNewOperations(dataValue);\n          this.setState({\n            symbolStatus: \"one\",\n          });\n        } else {\n          this.replaceLastOperation('+');\n        }\n      break;\n      case '-':\n        this.setState({\n          decimalStatus: 'none',\n        });\n        if (this.state.symbolStatus === \"none\") {\n          this.getNewOperations(dataValue);\n          this.setState({\n            symbolStatus: \"one\",\n          });\n        } else {\n          this.replaceLastOperation('-');\n        }\n      break;\n      case '/':\n        this.setState({\n          decimalStatus: \"none\",\n        });\n        if (this.state.symbolStatus === \"none\") {\n          this.getNewOperations(dataValue);\n          this.setState({\n            symbolStatus: \"one\",\n          });\n        } else {\n          this.replaceLastOperation('/');\n        }\n      break;\n      case '*':\n        this.setState({\n          decimalStatus: 'none',\n        });\n        if (this.state.symbolStatus === \"none\") {\n          this.getNewOperations(dataValue);\n          this.setState({\n            symbolStatus: \"one\",\n          });\n        } else {\n          this.replaceLastOperation('*');\n        }\n      break;\n      case '.':\n        if (this.state.decimalStatus === \"none\") {\n          this.getNewOperations(dataValue);\n          this.setState({\n            decimalStatus: 'one',\n          });\n        }\n      break;\n      case '0':\n        if (this.state.zeroStatus === \"zero\") {  \n          this.setState({ operations: [0], });\n        } else {\n          this.getNewOperations(dataValue);\n        }\n        break;\n      default:\n      if (this.state.zeroStatus === \"zero\") {\n        this.setState({ operations: [], zeroStatus: \"not zero\", symbolStatus: \"none\", }, () => {\n          this.getNewOperations(dataValue);\n        })\n      } else {\n        this.getNewOperations(dataValue);\n      }\n      break;\n    };\n  };\n  \n  replaceLastOperation = (symbol) => {\n    let array = this.state.operations;\n    array.pop();\n    array.push(symbol);\n    this.setState({\n      operations: array,\n      symbolStatus: \"one\",\n    });  \n  }\n\n  calculateAnswer = () => {\n    let result = this.state.operations.join('')\n    if (result) {\n      result = math.eval(result);\n      result = math.format(result, { precision: 14 });\n      result = String(result);\n      this.setState({\n        operations: [result],\n        zeroStatus: 'not zero',\n      });\n    };\n  };\n\n  getNewOperations = (value) => {\n    const newOperations = update(this.state.operations, {\n      $push: [value]\n    });\n    this.setState({\n      operations: newOperations,\n      zeroStatus: 'not zero',\n      symbolStatus: 'none',\n    });\n  }\n  \n  render() {\n    return (\n      <div id=\"body\">\n        <h1>Javascript Calculator</h1>\n        <div id=\"calculator\">\n          <Display info={this.state.operations} />\n          <Buttons onClick={this.handleClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Display extends React.Component {\n  render() {\n    const screenDisplay = this.props.info.join('');\n    return (\n      <div id=\"display\"> <p>{screenDisplay}</p> </div>\n    )\n  };\n}\n\n\n\nclass Buttons extends React.Component {\n  render() {\n    return (\n      <div id=\"buttons\" className=\"buttons\">\n        <button onClick={this.props.onClick} className=\"long-btns\" id=\"clear\" data-value=\"clear\" data-label=\"AC\">AC</button>\n        <button onClick={this.props.onClick} className=\"sq-btns\" id=\"divide\" data-value=\"/\" data-label=\"รท\">รท</button>\n        <button onClick={this.props.onClick} className=\"sq-btns\" id=\"multiply\" data-value=\"*\" data-label=\"X\">X</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"seven\" data-value=\"7\" data-label=\"7\">7</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"eight\" data-value=\"8\" data-label=\"8\">8</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"nine\" data-value=\"9\" data-label=\"9\">9</button>\n        <button onClick={this.props.onClick} className=\"sq-btns\" id=\"subtract\" data-value=\"-\" data-label=\"-\">-</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"four\" data-value=\"4\" data-label=\"4\">4</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"five\" data-value=\"5\" data-label=\"5\">5</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"six\" data-value=\"6\" data-label=\"6\">6</button>\n        <button onClick={this.props.onClick} className=\"sq-btns\" id=\"add\" data-value=\"+\" data-label=\"+\">+</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"one\" data-value=\"1\" data-label=\"1\">1</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"two\" data-value=\"2\" data-label=\"2\">2</button>\n        <button onClick={this.props.onClick} className=\"sq-btns num-btns\" id=\"three\" data-value=\"3\" data-label=\"3\">3</button>\n        <button onClick={this.props.onClick} className=\"tall-btns num-btns\" id=\"zero\" data-value=\"0\" data-label=\"0\">0</button>\n        <button onClick={this.props.onClick} className=\"sq-btns\" id=\"decimal\" data-value=\".\" data-label=\".\">.</button>\n        <button onClick={this.props.onClick} className=\"tall-btns\" id=\"equals\" data-value=\"equal\" data-label=\"=\">=</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}